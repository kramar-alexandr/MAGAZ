external function val AbsoluteVal(val);

SetLangMode(LangRussian,"RUS",0);





global function string 100 ipserver()
begin
  ipserver = "127.0.0.1";
end;


function string 255 NormalizeStrToJson (string Str)
begin
	integer strln,i;
	string 255 NormStr;
	

	NormStr = "";
	strln = len(Str);
	for (i=0;i<strln;i=i+1)begin
		if(mid(Str,i,1)==chr(34))then begin
			NormStr = NormStr & chr(92) & mid(Str,i,1);
		end else begin
			if(mid(Str,i,1)==chr(92))then begin
				NormStr = NormStr & chr(92) & mid(Str,i,1);
			end else begin
				NormStr = NormStr & mid(Str,i,1);
			end;
		end;
	end;
	
	
	NormalizeStrToJson = NormStr;
	
	return
end;


procedure addParamToJSONArea(string param, string value,integer type, var area req)
begin
string 255 resval;
integer i;



if(type==0)then begin
  for(i=0;i<len(value);i=i+1)begin
    if(asc(mid(value,i,1))>31)then begin
      resval = resval & mid(value,i,1);
    end;
  end;
  AddTextToArea("\"" & param & "\":" &  "\"" & resval & "\",",req);
end else begin
  resval = value;
  AddTextToArea("\"" & param & "\":" &  "" & resval & ",",req);
end;

return;
end;

procedure delLastComaInArea(var area req)
begin
	longint alen;
	string 1 lastsymb;
	area tmpar;
	
	alen = getarealength(req);
	lastsymb = getstringfromarea(req,alen-1,1);
	if(lastsymb==",")then begin
		getareafromarea(req,0,alen-1,tmpar);
		setareazerosize(req);
		getareafromarea(tmpar,0,getarealength(tmpar),req);
	end;

return;
end;


procedure LogRequests(area atext,string tag)
begin
  area logarea;
  
  addtexttoarea(chr(13) & chr(10) & "===========================    " & tag & "         " & currentdate & " " & currenttime & chr(13) & chr(10),logarea);
  writeareatofile(logarea,"checkboxlog.log",1);
  writeareatofile(atext,"checkboxlog.log",1);
  setareazerosize(logarea);
  addtexttoarea(chr(13) & chr(10),logarea);
  addtexttoarea(chr(13) & chr(10),logarea);
  writeareatofile(logarea,"checkboxlog.log",1);
return;
end;


/*procedure CreateFiscalFile(area filedata)				//Edit----------------------Dima  11.06.2015
begin
	record FiscalSetLocalBlock Fiskalblock;
	longint tick;
	string 30 fileName;
	area emptyArea;
	
	BlockLoad(Fiskalblock);
	fileName = "forFP_FM_to_C"; //Setting of FP_ConstrolService  (FPRoutes.txt);
	
	tick = GetCurTick;
	//if (nonblank(Fiskalblock.StoragePath)) then begin
		WriteAreaToFile(filedata,Fiskalblock.StoragePath & "\\" & fileName & tick & ".txt",0);
		if (FileExists(Fiskalblock.StoragePath & "\\" & fileName & tick & ".txt")==false) then begin
		  MessageBox(50003,"");
		end else begin
		  WriteAreaToFile(emptyArea,Fiskalblock.StoragePath & "\\" & "FMCommandFlag.txt",0);
		end;
	//end;
end;*/


function val GetRemainingVoucherSum(longint sernr)
Begin
val balance;
record GCSVc GCSr;

	balance = 0;
	GCSr.SerNr = sernr;
	ReadFirstMain(GCSr,1,true);
	balance = GCSr.Balance;
	
GetRemainingVoucherSum = balance;
return;
end;


function string 10 FormatFiscalDate(date d)
begin
	integer i;
	string 10 res;
	
	
	i = GetDay(d);
	res = i;
	if (i<10) then begin 
		res = "0" & i;
	end;	
	i = GetMonth(d);
	if (i<10) then begin 
		res = res & "0" & i;
	end else begin	
		res = res & i;
	end;
	i = GetYear(d);
	res = res & i;

FormatFiscalDate = res;
return;
end;




global
updating function boolean MakeFiscalReceipt(record IVCashVc IVCashr)	//Edit----------------------Dima  11.06.2015
begin
	row IVCashVc IVCashrw;
	record INVc INr;
	record ITVc ITr;
	area filedata;
	integer i,rwcnt,tempInt,taxgroup;
	string 5 d,nalogGroup,curNalogGroup;
	string 255 rowStr,name,message;
	string 10 articul,saleCommand,payCommand,refundCommand,command,rebateCommand,commentCommand;
	integer printStatus,paymentStatus,discountType;
	longint rowSum,totalRebate,cashSum,cardSum,giftSum,quant,giftBalance,prepaymentSum,totSum;
	array longint VoucherNumbers;
	array longint VoucherSum;
	boolean res;
	json jobj;
	area request,reply;
	
	if(currentuser!="PER1")then begin
   // goto lMakeFiscalReceipt;
	end;
	
  d = "!===!"; 	//divider

  saleCommand = "SaleEx";
  payCommand = "Payment";
  rebateCommand = "Discount";
  refundCommand  = "PayMoney";
  commentCommand = "Comment";  
  nalogGroup = "0";
  discountType = 0; //absolute value of discount
  totalRebate= 0 ;
  giftSum = 0;
  cardSum = 0;
  prepaymentSum = 0;
	rwcnt = MatRowCnt(IVCashr);
	res = true;
		
	for(i=0;i<rwcnt;i=i+1) begin
	  MatRowGet(IVCashr,i,IVCashrw);
    if (IVCashrw.stp==kInvoiceRowTypeCreditCardPayment and IVCashrw.PayMode=="GC" and IVCashr.Sum4<0 ) then begin //Edit----------------------Dima  08.09.2015
      res = false;
      goto LMakeFiscalReceipt;
    end;	
	end;
	
	
	if(rwcnt==0)then begin
	  res = false;
    goto LMakeFiscalReceipt;
	end;
	
	
	setareazerosize(request);
	addtexttoarea("{",request);
	addParamToJSONArea("commit_transaction",NormalizeStrToJson("true"),0,request);
	delLastComaInArea(request);
	addtexttoarea("}",request);
	LogRequests(request,">>>Create REceipt");
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt","application/json; charset=""utf-8""","",false,request,reply,5);
	LogRequests(reply,"<<<Create REceipt");
	
	
	for(i=0;i<rwcnt;i=i+1) begin
		MatRowGet(IVCashr,i,IVCashrw);
		printStatus = 0;
		if (IVCashrw.stp == kInvoiceRowTypeNormal and nonblank(IVCashrw.ArtCode)) then begin
		  curNalogGroup = nalogGroup;
		  INr.Code = IVCashrw.ArtCode;
		  if (ReadFirstMain(INr,1,true)) then begin
		    if (NonBlank(INr.Group)) then begin
		      ITr.Code = INr.Group;
		      if (ReadFirstMain(ITr,1,true) and NonBlank(ITr.VATCodeDom)) then begin
		        curNalogGroup = ITr.VATCodeDom;
		      end;
		    end;
		  end;
		  	
			if (IVCashrw.Quant>0) then begin
				command = saleCommand;
				rowSum = IVCashrw.Price * 100;
			end else begin	
				command = refundCommand;	
				rowSum = (IVCashrw.Sum * 100) / IVCashrw.Quant;	
			end;
			
			tempInt = IVCashrw.Quant;
			if (tempInt!=IVCashrw.Quant) then begin
			  quant = AbsoluteVal(IVCashrw.Quant)*1000;
			  printStatus = 3;
			end else begin
			  quant = AbsoluteVal(IVCashrw.Quant);
			end;
			quant = AbsoluteVal(IVCashrw.Quant)*1000;
			
			articul = IVCashr.SerNr & i;
			rowStr = command & d & quant & d & printStatus  & d &  "false" & d &  rowSum & d & curNalogGroup & d &  "false" & d & IVCashrw.Spec & d & articul & d; 
			AddTextToArea(rowStr,filedata);	
				
			if (nonblank(IVCashrw.vRebate) and IVCashrw.Quant>0) then begin
				rowSum = (AbsoluteVal(IVCashrw.Quant)*IVCashrw.Price - (AbsoluteVal(IVCashrw.Sum)))*100;
				rowStr = rebateCommand & d & discountType & d & rowSum  & d &  USetStr(31067)  & d;
				AddTextToArea(rowStr,filedata);
			end;
			
			//====================================================================================================>>>>>>>
			setareazerosize(request);
      addtexttoarea("{",request);
      addParamToJSONArea("code",NormalizeStrToJson(IVCashrw.ArtCode),0,request);
      addParamToJSONArea("name",NormalizeStrToJson(IVCashrw.Spec),0,request);
      addParamToJSONArea("price",rowSum,1,request);
      addParamToJSONArea("quantity",quant,1,request);      
      taxgroup = 8;//Normal
      addtexttoarea("\"taxes\": [" & taxgroup & "],",request);///Налоговая группа
      
      if (nonblank(IVCashrw.vRebate) and IVCashrw.Quant>0) then begin
        addtexttoarea("\"discounts\": [{",request);
        addtexttoarea("\"type\": \"DISCOUNT\",",request);
        addtexttoarea("\"mode\": \"PERCENT\",",request);
        addParamToJSONArea("value",stringtoval(IVCashrw.vRebate,m4val),1,request);
        addtexttoarea("\"tax_codes\": [0]",request);
        addParamToJSONArea("price",rowSum,1,request);
        delLastComaInArea(request);
        addtexttoarea("}]",request);
				rowSum = (AbsoluteVal(IVCashrw.Quant)*IVCashrw.Price - (AbsoluteVal(IVCashrw.Sum)))*100;
				rowStr = rebateCommand & d & discountType & d & rowSum  & d &  USetStr(31067)  & d;
				AddTextToArea(rowStr,filedata);
			end;
      
      if(nonblank(IVCashrw.SerialNr))then begin
        addParamToJSONArea("barcode",IVCashrw.SerialNr,0,request);
      end;
      
      if (IVCashrw.Quant>0) then begin
				addParamToJSONArea("is_return","false",1,request);
			end else begin	
				addParamToJSONArea("is_return","true",1,request);
			end;
      
      delLastComaInArea(request);
      addtexttoarea("}",request);
      LogRequests(request,">>>Add Good");
      SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/good","application/json; charset=""utf-8""","",false,request,reply,5);
      LogRequests(reply,"<<<Add Good");
			//====================================================================================================>>>>>>>			
		end;
		
		if (IVCashrw.stp == kInvoiceRowTypeGiftVoucherSold) then begin
			rowSum = IVCashrw.Sum * 100;
			quant = 1;
			name = USetStr(31068) & IVCashrw.GCNr & "  " & IVCashrw.Spec;
			articul = IVCashr.SerNr & i;
			//if (blank(name)) then begin name = USetStr(31064); end;
			rowStr = saleCommand & d & quant & d & printStatus  & d &  "false" & d &  rowSum & d & nalogGroup & d &  "false" & d & name & d & articul & d; 
			AddTextToArea(rowStr,filedata);
		end;		
		
		if (IVCashrw.stp==kInvoiceRowTypeCashPayment) then begin
			paymentStatus = 3;
			cashSum = AbsoluteVal(IVCashrw.Sum) * 100;
		end;
		if (IVCashrw.stp==kInvoiceRowTypeCreditCardPayment and IVCashrw.PayMode!="GC") then begin //Edit***************************Sasha2,15:02 27.07.2015
			paymentStatus = 0;
			cardSum = cardSum + AbsoluteVal(IVCashrw.Sum) * 100;
		end;
		
		if (IVCashrw.stp==kInvoiceRowTypeGiftVoucherPayment or (IVCashrw.PayMode=="GC" and IVCashrw.stp!=kInvoiceRowTypeGiftVoucherSold)) then begin //Edit***************************Sasha2,15:02 27.07.2015
			if (IVCashrw.GCNr>0) then begin
			  VoucherNumbers[VoucherNumbers.length] = IVCashrw.GCNr;
			end else begin
			  VoucherNumbers[VoucherNumbers.length] = 0;
			end;
			VoucherSum[VoucherSum.length] =  AbsoluteVal(IVCashrw.Sum) * 100;
		end;
		
		if (IVCashrw.stp==kInvoiceRowTypePrepayment) then begin
			prepaymentSum =prepaymentSum + AbsoluteVal(IVCashrw.Sum) * 100;
		end;						
		
	end;
	
	
	
	//Gift voucher payment---------------------------
	if (VoucherSum.length>0) then begin
			discountType = 4; //discount on the total sum
			for(i=0;i<VoucherSum.length;i=i+1) begin							
				rowStr = rebateCommand & d & discountType & d & VoucherSum[i]  & d &  USetStr(31066) & d; 
				giftSum = giftSum + VoucherSum[i];
				AddTextToArea(rowStr,filedata);	//Gift voucher
				rowStr = commentCommand & d & USetStr(31072)  & VoucherNumbers[i] & d & "false" &  d ;
				AddTextToArea(rowStr,filedata);	//was used
				giftBalance = GetRemainingVoucherSum(VoucherNumbers[i]);
				if (giftBalance>0) then begin
						rowStr = commentCommand & d & USetStr(31069)  & giftBalance & d & "false" &  d ;
						AddTextToArea(rowStr,filedata);
				end;
			end;
	end;
	
	//prepayment---------------------------
	if(prepaymentSum>0) then begin
		discountType = 4;
		rowStr = rebateCommand & d & discountType & d & prepaymentSum  & d &  USetStr(31071) & d;
		AddTextToArea(rowStr,filedata);		 
	end;
	
	//payment by card and cash---------------------------
	if (cardSum>0 and cashSum>0) then begin	
		paymentStatus = 3;
		rowStr = payCommand & d & paymentStatus & d & cashSum & "???" & cardSum & d &  "false" & d & "true" & d ;
		AddTextToArea(rowStr,filedata); 
	end else begin	
		if (cashSum>0) then begin
				paymentStatus = 3;
				rowStr = payCommand & d & paymentStatus & d & cashSum & d &  "false" & d & "true" & d ;
				AddTextToArea(rowStr,filedata);
		end;	
		if (cardSum>0) then begin
				paymentStatus = 0;
				rowStr = payCommand & d & paymentStatus & d & cardSum & d &  "true" & d & "true" & d ;
				AddTextToArea(rowStr,filedata);
		end;
				
	end;
	
	totSum = IVCashr.Sum4*100;
	if (totSum>0  and  ((giftSum >= totSum) or (prepaymentSum >= totSum))) then begin	//for closing of receipt
				paymentStatus = 3;
				rowStr = payCommand & d & paymentStatus & d & "0" & d &  "false" & d & "true" & d ;
				AddTextToArea(rowStr,filedata);
	end;	


	AddTextToArea(chr(13) & "<END>",filedata);
	
	
	//====================================================================================================>>>>>>>
	setareazerosize(request);
	addtexttoarea("{",request);
	
	addtexttoarea("\"payments\": [",request);
	  
  cashSum = totSum - cardSum;
  
  if(cardSum>0)then begin
    addtexttoarea("{",request);
      addParamToJSONArea("type",NormalizeStrToJson("CASHLESS"),0,request);
      addParamToJSONArea("code",2,1,request);
      addParamToJSONArea("value",cardSum,1,request);
      addParamToJSONArea("label",NormalizeStrToJson("Картка"),0,request);
      delLastComaInArea(request);
    addtexttoarea("},",request);
  end;
  if(cashSum>0)then begin
    addtexttoarea("{",request);
      addParamToJSONArea("type",NormalizeStrToJson("CASH"),0,request);
      addParamToJSONArea("value",cashSum,1,request);
      addParamToJSONArea("label",NormalizeStrToJson("Готівка"),0,request);
      delLastComaInArea(request);
    addtexttoarea("},",request);
	end;
	delLastComaInArea(request);
	addtexttoarea("]}",request);
	LogRequests(request,">>>Close REceipt");
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/done","application/json; charset=""utf-8""","",false,request,reply,5);
	LogRequests(reply,"<<<Close REceipt");
	
	
	jobj = parsejsonarea(reply);
	if(JSONGet(jobj,"status")=="DONE")then begin
	  messagebox(0,"Продажа фискализирована");
    IVCashr.FiscalID = JSONGet(jobj,"id");
    IVCashr.FiscalNum = JSONGet(jobj,"shift/cash_register/fiscal_number");
    IVCashr.FiscalCode = JSONGet(jobj,"fiscal_code");
    IVCashr.FiscalDate = JSONGet(jobj,"fiscal_date");
    IVCashr.tax_url = JSONGet(jobj,"tax_url");
  end else begin
    message = JSONGet(jobj,"message");
    messagebox(0,"Ошибка фискализации " & message);
  end;
	
	
	
	//====================================================================================================>>>>>>>
	//CreateFiscalFile(filedata);
	
	LMakeFiscalReceipt:;
	MakeFiscalReceipt = res;
return;	
end;



global procedure CheckCashReply(Area reply)
begin
  area logarea;
  json jsonobj;
  val bal;
  string 100 resultstr;
  
  jsonobj = ParseJSONArea(reply);
  resultstr = JSONGet(jsonobj,"status");
  
  if(resultstr=="true" or resultstr=="1")then begin
    resultstr = JSONGet(jsonobj,"report/balance");
    if(nonblank(resultstr))then begin
     bal = stringtoval(resultstr,m4val)/100;
     messagebox(0,"Денег в кассе: " & bal);
    end else begin
      messagebox(0,"Ошибка!");
    end;
    
    
  end else begin
    messagebox(0,"Ошибка!");
  end;
  
  LogRequests(reply,"<<<MakeXReport");
  
return;
end;

global procedure CheckCash()
begin
	string 255 command,password,d;
	area filedata,request,reply;
	
	addtexttoarea("{}",request);
		
	LogRequests(request,">>>MakeXReport");
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/shift/xreport","application/json; charset=""utf-8""","",false,request,reply,5);
	CheckCashReply(reply);
return;
end;


global procedure MakeXReportReply(Area reply)
begin
  area logarea;
  
  LogRequests(reply,"<<<MakeXReport");
  
return;
end;

global procedure MakeXReport()
begin
	string 255 command,password,d;
	area filedata,request,reply;
	
	d = "!===!"; 	//divider	
	command = "DayReport";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	
	addtexttoarea("{}",request);
		
	LogRequests(request,">>>MakeXReport");
	
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/shift/xreport","application/json; charset=""utf-8""","",false,request,reply,5);
  MakeXReportReply(reply);
	
	//CreateFiscalFile(filedata);
return;
end;



global procedure OpenShiftReply(Area reply)
begin
  area logarea;
  json jsonobj;
  string 100 resultstr;
  
  jsonobj = ParseJSONArea(reply);
  resultstr = JSONGet(jsonobj,"status");
  
  if(resultstr=="true" or resultstr=="1")then begin
    messagebox(0,"Смена открыта");
  end else begin
    messagebox(0,"Ошибка!");
  end;
    
  LogRequests(reply,"<<<<OpenShift");
  
return;
end;

global procedure OpenShift()
begin
	string 255 command,password,d;
	area filedata,request,reply;
		
	addtexttoarea("{}",request);
		
	LogRequests(request,">>>OpenShift");
	
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/shift/open","application/json; charset=""utf-8""","",false,request,reply,5);
  OpenShiftReply(reply);
	
	//CreateFiscalFile(filedata);
return;
end;



global procedure MakeZReportReply(Area reply)
begin
  area logarea;
  json jsonobj;
  string 100 resultstr,message;
  
  jsonobj = ParseJSONArea(reply);
  resultstr = JSONGet(jsonobj,"status");
    
  if(resultstr=="true" or resultstr=="1")then begin
    messagebox(0,"Смена закрыта");
  end else begin
    message = "Ошибка!";
    resultstr = JSONGet(jsonobj,"message");
    if(nonblank(resultstr))then begin
      message = message & " " & resultstr;
    end;
    messagebox(0,message);
  end;
  
  LogRequests(reply,"<<<MakeZReport");
  
return;
end;

global procedure MakeZReport()
begin
	string 255 command,password,d,cashOutFlag;
	area filedata,request,replyarea,reply;
	integer wn;
	longint sum;
	record RcVc RepSpec;
	json jsonobj;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);	
	
	if (RepSpec.flags[1]>0) then begin
		cashOutFlag = "true";
	end else begin
		cashOutFlag = "false";
	end;
		
	d = "!===!"; 	//divider	
	command = "DayClrReport";
	password = "";
	
	AddTextToArea(command & d & cashOutFlag & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	
	
	if(cashOutFlag=="true")then begin
	  addtexttoarea("{}",request);
	  LogRequests(request,">>>XReport");
	  SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/shift/xreport","application/json; charset=""utf-8""","",false,request,replyarea,5);
    jsonobj = ParseJSONArea(replyarea);
    LogRequests(replyarea,"<<<XReport");
    sum = stringtolongint(JSONGet(jsonobj,"report/balance"));
    
    if(sum>0)then begin
      setareazerosize(request);
      addtexttoarea("{\"payment\": {\"type\": \"CASH\",\"value\": " & -sum & ",\"label\": \"Готівка\"}}",request);
      LogRequests(request,">>>CashOut");
      SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/service","application/json; charset=""utf-8""","",false,request,replyarea,5);
      LogRequests(replyarea,"<<<CashOut");
    end;
    
	  setareazerosize(request);
	end;
	
	addtexttoarea("{}",request);
	LogRequests(request,">>>MakeZReport");
	
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/shift/close","application/json; charset=""utf-8""","",false,request,reply,5);
	MakeZReportReply(reply);
	
	//CreateFiscalFile(filedata);
return;
end;


/*global procedure MakePeriodicReport()
begin
	string 255 command,password,d;
	area filedata;
	string 10 sdate,edate,temp;
	integer wn;
	record RcVc RepSpec;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);

	sdate = FormatFiscalDate(RepSpec.sStartDate);
	edate = FormatFiscalDate(RepSpec.sEndDate);
	
	d = "!===!"; 	//divider	
	command = "periodreport";

	AddTextToArea(command & d & sdate & d & edate,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);
	

return;
end;*/




/*global procedure MakePeriodicShortReport()
begin
	string 255 command,d;
	area filedata;
	string 10 sdate,edate,temp;
	integer wn;
	record RcVc RepSpec;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);

	sdate = FormatFiscalDate(RepSpec.sStartDate);
	edate = FormatFiscalDate(RepSpec.sEndDate);
	
	d = "!===!"; 	//divider	
	command = "periodreportshort";

	AddTextToArea(command & d & sdate & d & edate,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);	

return;
end;*/


global procedure ResetOrderReply(Area reply)
begin
  area logarea;
  
  LogRequests(reply,"ResetOrder");
  
return;
end;

global procedure MakeResetOrder()
begin
	string 255 command,d;
	area filedata,request,reply;
	
	d = "!===!"; 	//divider	
	command = "ResetOrder";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	
	addtexttoarea("{}",request);
		
	LogRequests(request,"ResetOrder");
	
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt","application/json; charset=""utf-8""","",false,request,reply,5);
  ResetOrderReply(reply);
	
	//CreateFiscalFile(filedata);
return;
end;


global procedure MakeNullCheckReply(Area reply)
begin
  area logarea;
  
  LogRequests(reply,"NullCheck");
  
return;
end;

global procedure MakeNullCheck()
begin
	string 255 command,d;
	area filedata,request,reply;
	
	d = "!===!"; 	//divider	
	command = "NullCheck";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	
	addtexttoarea("{}",request);
		
	LogRequests(request,"NullCheck");
	
	SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/null","application/json; charset=""utf-8""","",false,request,reply,5);
  MakeNullCheckReply(reply);
	
	//CreateFiscalFile(filedata);
return;
end;

/*global procedure MakeLastCheck()
begin
	string 255 command,d;
	area filedata;	
	
	d = "!===!"; 	//divider	
	command = "CopyLastCheck";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);	
	
return;
end;*/


global procedure MakeCashOutReply(Area reply)
begin
  area logarea;
  json jsonobj;
  string 100 resultstr,message;
  boolean res;
  
  jsonobj = ParseJSONArea(reply);
  resultstr = JSONGet(jsonobj,"type");
  if(resultstr=="SERVICE_IN")then begin
    resultstr = JSONGet(jsonobj,"status");
    if(resultstr=="DONE")then begin
      res = true;
      Messagebox(0,"Внесение денег готово.");
    end;
  end;
  if(resultstr=="SERVICE_OUT")then begin
    resultstr = JSONGet(jsonobj,"status");
    if(resultstr=="DONE")then begin
      res = true;
      Messagebox(0,"Вынесение денег готово.");
    end;
  end;
  
  
  
  if(!res)then begin
    message = "Ошибка!";
    resultstr = stringtolongint(JSONGet(jsonobj,"message"));
    if(nonblank(resultstr))then begin
      message = message & " " & resultstr;
    end;
    messagebox(0,message);
  end;
  
  LogRequests(reply,"CashIn or CashOut");
  
return;
end;


global procedure MakeCashIn()
begin
	string 255 command,avans,d;
	area filedata,request,reply;
	integer wn;
	longint sum;
	record RcVc RepSpec;
	
	logtext(0,"MakeCashIn");
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);	
	
	d = "!===!"; 	//divider	
	command = "InToCash";
	sum = RepSpec.vals1 * 100;
	avans = sum;
	RepSpec.vals1 = blankval;
	PutWindowRecord(wn,RepSpec);	
	
	addtexttoarea("{\"payment\": {\"type\": \"CASH\",\"value\": " & sum & ",\"label\": \"Готівка\"}}",request);
		
	LogRequests(request,"CashIn");
	if(sum>0)then begin
    SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/service","application/json; charset=""utf-8""","",false,request,reply,5);
    MakeCashOutReply(reply);
  end;
	
	AddTextToArea(command & d & avans & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);
return;
end;



global procedure MakeCashOut()
begin
	string 255 command,money,d;
	area filedata,reply;
	integer wn;
	record RcVc RepSpec;
	longint sum;
	area request;
	
	logtext(0,"MakeCashOut");
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);	
	
	d = "!===!"; 	//divider	
	command = "OutOfCash";
	sum = RepSpec.vals1 * 100;
	RepSpec.vals1 = blankval;
	PutWindowRecord(wn,RepSpec);	
	
	
	money = sum;
	
	AddTextToArea(command & d & money & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	
	addtexttoarea("{\"payment\": {\"type\": \"CASH\",\"value\": " & -sum & ",\"label\": \"Готівка\"}}",request);
		
	LogRequests(request,"CashOut");
	if(sum>0)then begin
    SendWebRequest(ipserver,9200,-1,false,"POST","/api/v1/receipt/service","application/json; charset=""utf-8""","",false,request,reply,5);

    MakeCashOutReply(reply);
	end;
	//CreateFiscalFile(filedata);
	
return;
end;


/*global procedure MakeDateSetting()
begin
	string 255 command,d;
	string 10 newdate,newtime;
	area filedata;
	integer wn;
	record RcVc RepSpec;
	
	wn = CurWindow;
	DeselectWindow(wn,false);	
	GetWindowRecord(wn,RepSpec);	
	
	d = "!===!"; 	//divider	
	command = "setdatetime";
	newdate = RepSpec.f1;
	newtime = RepSpec.f2;
	
	//newdate = RepSpec.f1;
	//newtime = RepSpec.f2;
	
	newdate = DateToString(CurrentDate,"DD.MM.YYYY");;
	newtime = CurrentTime;
	
	if (blank(newdate)) then begin newdate="0"; end;
	if (blank(newtime)) then begin newtime="0"; end;
	
	AddTextToArea(command & d & newdate & d & newtime & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);
return;
end;*/



global
function Boolean FiscalPrintingTClassOnOpenWindow(Integer wn)//Edit----------------------Dima  15.06.2015
begin
  record RcVc RepSpec;
  date d;
  string 10 sd;
  
  sd = DateToString(CurrentDate,"DD/MM/YYYY");
  GetWindowRecord(wn,RepSpec);
	RepSpec.sStartDate = sd;
	RepSpec.sEndDate = sd;
	RepSpec.flags[1] = 1;
	sd = DateToString(CurrentDate,"DD.MM.YYYY");
	RepSpec.f1 = sd;
	RepSpec.f2 = CurrentTime;
  PutWindowRecord(wn,RepSpec); 
  
  FiscalPrintingTClassOnOpenWindow = false;
  return;
end;



/*global procedure OpenCashBox()	//Edit----------------------Dima  07.07.2015
begin
	string 255 command,d;
	area filedata;	
	
	d = "!===!"; 	//divider	
	command = "OpenBox";
	
	AddTextToArea(command & d,filedata);
	AddTextToArea(chr(13) & "<END>",filedata);
	//CreateFiscalFile(filedata);	
	
return;
end;*/




/*
global
 function LongInt FiscalSettingsBlockRecordUpdateClient(var record FiscalSettingsBlock FSb,record FiscalSettingsBlock FS2b,LongInt stat,LongInt long4)
begin
	area checkarea;
	LongInt res;
			//if (FileExists(Fiskalblock.StoragePath & "\\checkconnect.txt")) then begin
			//AddTextToArea(chr(13) & "<END>",filedata);
			//WriteAreaToFile(filedata,Fiskalblock.StoragePath & "\\" & Fiskalblock.FileName & tick & ".txt",0);
FiscalSettingsBlockRecordUpdateClient = res;  
  return;
end;


global
 function LongInt FiscalSettingsBlockRecordSaveClient(var record FiscalSettingsBlock FSb,record FiscalSettingsBlock FS2b,LongInt stat,LongInt long4)
begin
  LongInt res;
	integer wn,mwn;
	
	wn = CurWindow;
	mwn = MotherWindow(wn);
	UpdateSHVcFromPackList(PackListr,mwn);
  PackListVcRecordSaveClient = res; 
  
  return;
end;

global
function LongInt FiscalSettingsBlockRecordCheck(var record FiscalSettingsBlock FSb,record FiscalSettingsBlock FS2b,LongInt stat,LongInt long4)
BEGIN
longint res;
res = 0;
LogText(0,"FiscalSettingsBlockRecordCheck");


	FiscalSettingsBlockRecordCheck = res;
return;
end;

global
function LongInt FiscalSettingsBlockRecordCheckClient(LongInt wn,record FiscalSettingsBlock FSb,record FiscalSettingsBlock FS2b,LongInt stat,LongInt long4)
BEGIN
longint res;
res = 0;

MessageBox(0,"FiscalSettingsBlockRecordCheckClient");


	FiscalSettingsBlockRecordCheckClient = res;
return;
end;


*/