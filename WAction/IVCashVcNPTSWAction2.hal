external procedure GetCurncyRoundoff(string,string,string,var roundmode,var roundmode,var roundmode);
external function Integer GetSelectedPOSItemRowIndex(Integer);
external procedure TouchScreenXReading;
external procedure TouchScreenZReading;
external updating procedure RestAccCurUserTabs();
remote procedure CntNPTSPaymentCurrenciesRemote(string,var Array string,var Array string,var Array Integer,var Array string,var Integer);
external function Integer CheckFM32State(Integer);
external function Boolean FindLocalSerialPortDevice(Integer,LongInt,string,var record LSerialPortDeviceVc);
external procedure DisplayIVCashItem(record IVCashVc,Integer);
external procedure IVCashDClass_RefreshStringList(Integer,record IVCashVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure IVCashSumup(var record IVCashVc,Boolean);
external procedure IVCashPasteRvrsVATCode(var record IVCashVc,Boolean);

global
function Boolean CanOpenIVCashPayment()
begin
  Boolean res;
  record LocalMachineBlock LMb;
  record LSerialPortDeviceVc LSPDr;

  res = true;
  if (Haslocalization("LVA")) then begin
    BlockLoad(LMb);
    if (FindLocalSerialPortDevice(kSerialPortDeviceClassFiscalPrinter,-1,LMb.LocalMachineCode,LSPDr)) then begin
      switch (LSPDr.Printer) begin
        case kSerialPortDeviceModelFiscPrinterFisUSBMDLL:
          switch (CheckFM32State(LSPDr.Printer)) begin
            case kFiscalPrinterStateHARD:
              res = false;
            case kFiscalPrinterStateJCLOSE:
              res = false;
            case 12400:
              res = false;
          end;
      end;
    end;
  end;

  if (res==false) then begin
    MessageBox(41011,"");
  end;

  CanOpenIVCashPayment = res;
  return;
end;

global
function Boolean CheckCustomerToUseReverseVAT(Integer wn)
begin
  record IVCashVc IVCashr;
  row IVCashVc IVCashrw;
  Integer i,rwcnt;
  string 255 vatcode;
  Boolean checkvatf;
  Integer stat,nwn;
  record INVc INr;
  record CashierDefBlock CDb;
  record CUVc CUr;
  Boolean res;
  record RcVc RepSpec;

  res = true;
  BlockLoad(CDb);
  if (CDb.CheckVATNo==1) then begin
    if (GetWindowString(wn,"CheckVATStatus")!="checked") then begin
      GetWindowRecord(wn,IVCashr);
      CUr.Code = IVCashr.CustCode;
      if (CUr.Code!=CDb.DefCustCode) then begin
        if (ReadFirstMain(CUr,1,true)) then begin
          if (IVCashr.RvrsVAT>0) then begin
            //stat = CheckIfCustomerPaysVAT(CUr);
            PutWindowString(wn,"CheckVATStatus","checked");
            switch (stat) begin
              case kVATStatusPaying:
                IVCashr.RvrsVATFlag = 1;
                IVCashPasteRvrsVATCode(IVCashr,false);
                IVCashSumup(IVCashr,true);
                PutWindowRecord(wn,IVCashr);
                IVCashDClass_RefreshStringList(wn,IVCashr);
              case kVATStatusNotPaying:
                IVCashr.RvrsVATFlag = 2;
                IVCashPasteRvrsVATCode(IVCashr,false);
                IVCashSumup(IVCashr,true);
                PutWindowRecord(wn,IVCashr);
                IVCashDClass_RefreshStringList(wn,IVCashr);
                //do nothing;

              case kVATStatusUnknown:
                res = false;
                MessageBox(41012,"");
                //open helper window
                nwn = OpenWindow("IVCashReverseVATHelperTClass",0,wn,"","",RepSpec);
            end;
          end;
        end;
      end;
    end;
  end;

  CheckCustomerToUseReverseVAT = res;
  return;
end;

global 
procedure OpenNPTSPaymentTClass(Integer mwn,LongInt sernr,val change,val tot,string curncy)
begin
  Integer nwn;
  record RcVc RepSpec;
  record IVCashVc IVCashr;
  record IVVc IVr;
  row IVVc IVrw;
  record LocalMachineBlock LMb;
  Array string 255 acrncy,alabel,apaymentmode;
  Array Integer apaymenttype;
  Integer acrncnt,i,rwcnt;

  RepSpec.vals1 = tot;
  RepSpec.vals0 = change;
  switch (GetWindowFileName(mwn)) begin
    case "IVVc":
      GetWindowRecord(mwn,IVr);
      rwcnt = MatRowCnt(IVr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IVr,i,IVrw);
          switch (IVrw.stp) begin
            case kInvoiceRowTypePrepayment:
              RepSpec.vals1 = RepSpec.vals1 - IVrw.Sum;
          end;
        end;
  end;
//  if (RepSpec.vals0<0) then begin
  if (CanOpenIVCashPayment) then begin
    nwn = OpenWindow("NPTSPaymentTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(LMb);
      CntNPTSPaymentCurrenciesRemote(LMb.LocalMachineCode,alabel,acrncy,apaymenttype,apaymentmode,acrncnt);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.CurncyCode = curncy;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"NPTSPaymentTClassAmount" & apaymentmode[0],true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenNPTSPaymentBLayoutTClass(Integer mwn,LongInt sernr,val change,val tot,string curncy)
begin
  Integer nwn;
  record RcVc RepSpec;
  record LocalMachineBlock LMb;
  Array string 255 acrncy,alabel,apaymentmode;
  Array Integer apaymenttype;
  Integer acrncnt,i,rwcnt;

  RepSpec.vals1 = tot;
  RepSpec.vals0 = change;
//  if (RepSpec.vals0<0) then begin
  if (true) then begin
    nwn = OpenWindow("NPTSPaymentBLayoutTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(LMb);
      CntNPTSPaymentCurrenciesRemote(LMb.LocalMachineCode,alabel,acrncy,apaymenttype,apaymentmode,acrncnt);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.CurncyCode = curncy;
      PutWindowString(nwn,"NPTSPaymentTClassBase1ChangeAmount",0.00);
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"NPTSPaymentTClassAmount" & apaymentmode[0],true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenNPTSPaymentOneModeTClass(Integer mwn,LongInt sernr,val change,val tot,string curncy)
begin
  Integer nwn;
  record RcVc RepSpec;
  record LocalMachineBlock LMb;
  Array string 255 acrncy,alabel,apaymentmode;
  Array Integer apaymenttype;
  Integer acrncnt,i,rwcnt;

  RepSpec.vals1 = tot;
  RepSpec.vals0 = change;
//  if (RepSpec.vals0<0) then begin

  if (CanOpenIVCashPayment==false) then begin
    goto LExit;
  end;
  if (CheckCustomerToUseReverseVAT(mwn)==false) then begin//maybe this should be put when we insert a customer
    goto LExit;
  end;
  if (true) then begin
    nwn = OpenWindow("NPTSPaymentOneModeTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(LMb);
      CntNPTSPaymentCurrenciesRemote(LMb.LocalMachineCode,alabel,acrncy,apaymenttype,apaymentmode,acrncnt);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.CurncyCode = curncy;
//      PutWindowString(nwn,"NPTSPaymentTClassBase1ChangeAmount",0.00);//??
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"NPTSPaymentTClassAmount",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;

LExit:;
  return;
end;

global 
procedure OpenNPTSCashPaymentTClass(Integer mwn,LongInt sernr,val change,val tot,string curncy,string paymode,string label)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;
  record POSCurrenciesBlock POSCb;
  record IVCashVc IVCashr; //Edit***************************Sasha2,15:45 13.09.2016
  roundmode rndtotal,rndline,rndvat;

  RepSpec.vals1 = tot;
  RepSpec.vals0 = change;

  GetCurncyRoundoff(curncy,paymode,GetWindowFileName(mwn),rndtotal,rndline,rndvat);
  RepSpec.vals1 = Round(RepSpec.vals1,rndtotal);
  RepSpec.vals0 = Round(RepSpec.vals0,rndtotal);
  
//  if (RepSpec.vals0<0) then begin
  if (true) then begin
    nwn = OpenWindow("NPTSCashPaymentTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(BCb);
      BlockLoad(POSCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.CurncyCode = curncy;
      if (blank(RepSpec.CurncyCode)) then begin
        RepSpec.CurncyCode = BCb.BaseCur1;
      end;
      RepSpec.AccStr = paymode;
      RepSpec.f6 = label;
      if (GetWindowFileName(mwn)=="IVCashVc") then begin //Edit***************************Sasha2,15:44 13.09.2016 {
        GetWindowRecord(mwn,IVCashr);
        //IVCashr.SerNr = sernr;
        //if (ReadFirstMain(IVCashr,1,true)) then begin
          RepSpec.flags[0] = IVCashr.MakeFiscalReceiptF;
          //if (IVCashr.Sum4<0) then begin
            //PutWindowString(nwn,"NPTSCashPaymentCashReceived" & 0,IVCashr.Sum4);
          //end;
        //end;
      end; //Edit***************************Sasha2,15:46 13.09.2016 }
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"NPTSCashPaymentCashReceived0",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenChequePayTouchScreenDClass(Integer mwn,Integer rownr,LongInt sernr,val change,val tot,string curncy,string paymode,string label)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;

  RepSpec.vals0 = -change;

  if (RepSpec.vals0==0) then begin
    RepSpec.vals0 = tot;
  end;
  if (RepSpec.vals0>0) then begin
    nwn = OpenWindow("ChequePayTouchScreenDClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(BCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = rownr;
      RepSpec.CurncyCode = BCb.BaseCur1;
      RepSpec.AccStr = paymode;
      RepSpec.f6 = label;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"vals0",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(24195,"");
  end;
  return;
end;

global 
procedure OpenCCPayTouchScreenDClassWithVAT(Integer mwn,Integer rownr,LongInt sernr,val sum4,val change,val tot,string curncy,string paymode,string label,val vat)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;
  record IVCashVc IVCashr; //Edit***************************Sasha2,15:45 13.09.2016
  Boolean testf;
  string 100 param; //Edit***************************Sasha2,12:46 14.09.2016
  longint amount;
  area areq,areply,cr;
  
  RepSpec.vals0 = -change;
  RepSpec.vals2 = vat;
  if (RepSpec.vals0==0) then begin
    RepSpec.vals0 = tot;
  end;
  testf = true;
  if (sum4>0) then begin
    if (RepSpec.vals0<=0) then begin
      testf = false;
    end;
  end else begin
    if (RepSpec.vals0>=0) then begin
      testf = false;
    end;
  end;
  if (testf) then begin
    param = LastInRange(paymode,20); //Edit***************************Sasha2,12:47 14.09.2016
    if (UpperCase(param)=="SELF") then begin 
      nwn = OpenWindow("CCPayTouchScreenSelfDClass",0,mwn,"","",RepSpec); //Edit***************************Sasha2,13:39 14.09.2016
    end else begin
      nwn = OpenWindow("CCPayTouchScreenDClass",0,mwn,"","",RepSpec); 
    end;
    if (nwn>0) then begin
      BlockLoad(BCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = rownr;
      RepSpec.CurncyCode = curncy;
      if (blank(RepSpec.CurncyCode)) then begin
        RepSpec.CurncyCode = BCb.BaseCur1;
      end;
      //RepSpec.AccStr = paymode; //Edit***************************Sasha2,12:48 14.09.2016
      RepSpec.AccStr = FirstInRange(paymode,20); //Edit***************************Sasha2,12:47 14.09.2016
      RepSpec.f6 = label;
      if (GetWindowFileName(mwn)=="IVCashVc" and UpperCase(param)!="SELF") then begin //Edit***************************Sasha2,15:44 13.09.2016 {
        IVCashr.SerNr = sernr;
        if (ReadFirstMain(IVCashr,1,true)) then begin
          RepSpec.flags[0] = IVCashr.MakeFiscalReceiptF;
          RepSpec.flags[0] = 1;
          
          setareazerosize(areq);
          addtexttoarea(chr(13) & chr(10),cr);
          amount = RepSpec.vals0 * 100;
          addtexttoarea("{\"amount\":" & amount & "}",areq);
          
          writeareatofile(cr,"hansa.log",1);
          writeareatofile(areq,"hansa.log",1);
          writeareatofile(cr,"hansa.log",1);
          
          SendWebRequest("127.0.0.1",9020,-1,false,"POST","/api/pos/" & "9428d00b-34e7-401e-b58b-ecd249659435" & "/purchase/","application/json","",false,areq,areply,10);
          
          writeareatofile(cr,"hansa.log",1);
          writeareatofile(areply,"hansa.log",1);
          writeareatofile(cr,"hansa.log",1);
          
        end;
      end; //Edit***************************Sasha2,15:46 13.09.2016 }
      PutWindowRecord(nwn,RepSpec);
      switch (GetWindowClass(nwn)) begin
        case "CCPayTouchScreenDClass":
          WindowFieldGoto(nwn,RepSpec,-1,"vals0",true);
        case "CCPayTouchScreenSelfDClass":
          WindowFieldGoto(nwn,RepSpec,-1,"f1",false);
      end;

    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(24195,"");
  end;
  return;
end;

global
procedure OpenCCPayTouchScreenDClass(Integer mwn,Integer rownr,LongInt sernr,val sum4,val change,val tot,string curncy,string paymode,string label)
begin
  OpenCCPayTouchScreenDClassWithVAT(mwn,rownr,sernr,sum4,change,tot,curncy,paymode,label,0);
end;

global
procedure OpenDCPayTouchScreenDClass(Integer mwn,Integer rownr,LongInt sernr,val sum4,val change,val tot,string curncy,string paymode,string label)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;
  Boolean testf;

  RepSpec.vals0 = -change;

  if (RepSpec.vals0==0) then begin
    RepSpec.vals0 = tot;
  end;
  testf = true;
  if (sum4>0) then begin
    if (RepSpec.vals0<=0) then begin
      testf = false;
    end;
  end else begin
    if (RepSpec.vals0>=0) then begin
      testf = false;
    end;
  end;
  if (testf) then begin
    nwn = OpenWindow("DCPayTouchScreenDClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(BCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = rownr;
      RepSpec.CurncyCode = curncy;
      if (blank(RepSpec.CurncyCode)) then begin
        RepSpec.CurncyCode = BCb.BaseCur1;
      end;
      RepSpec.AccStr = paymode;
      RepSpec.f6 = label;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"vals0",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(24195,"");
  end;
  return;
end;

global
procedure OpenSwishPayTouchScreenOClass(Integer mwn,LongInt sernr,val sum4,val change,val tot,string curncy,string paymode,string label)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;
  Boolean testf;

  RepSpec.vals0 = -change;
//  RepSpec.vals2 = vat;
  if (RepSpec.vals0==0) then begin
    RepSpec.vals0 = tot;
  end;
  testf = true;
  if (sum4>0) then begin
    if (RepSpec.vals0<=0) then begin
      testf = false;
    end;
  end else begin
    if (RepSpec.vals0>=0) then begin
      testf = false;
    end;
  end;
  if (testf) then begin
    nwn = OpenWindow("SwishPayTouchScreenOClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(BCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.CurncyCode = curncy;
      if (blank(RepSpec.CurncyCode)) then begin
        RepSpec.CurncyCode = BCb.BaseCur1;
      end;
      RepSpec.AccStr = paymode;
      RepSpec.f6 = label;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(24195,"");
  end;
  return;
end;

global 
updating procedure RestAccDClassTouchScreenOpenInvoices()
begin
  RestAccCurUserTabs;
  return;
end;

global 
procedure RestAccDClassTouchScreenXReading()
begin
  TouchScreenXReading;
  return;
end;

global 
procedure RestAccDClassTouchScreenZReading()
begin
  TouchScreenZReading;
  return;
end;

global 
procedure OpenOnHotelGuestTouchScreenOClass(Integer mwn,LongInt sernr,val tot,string room,string paymode,string label)
begin
  Integer nwn;
  record RcVc RepSpec;
  record BaseCurBlock BCb;

  RepSpec.vals0 = tot;
  if (RepSpec.vals0>0) then begin
    nwn = OpenWindow("OnHotelGuestTouchScreenOClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      BlockLoad(BCb);
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.f1 = room;
      RepSpec.CurncyCode = BCb.BaseCur1;
      RepSpec.AccStr = paymode;
      RepSpec.f6 = label;
      PutWindowRecord(nwn,RepSpec);
      if (blank(RepSpec.f1)) then begin
        WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
      end else begin
        WindowFieldGoto(nwn,RepSpec,-1,"f2",true);
      end;
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(24195,"");
  end;
  return;
end;

global
function string 40 OnHotelGuestTouchScreenOClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  record RcVc RepSpec;
  
  GetWindowRecord(wn,RepSpec);
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "f2":
      if (blank(RepSpec.f1)) then begin
        psname = "CUGuestSClass";
      end else begin
        psname = "GuestSClass";
      end;
    case "f3":
      if (blank(RepSpec.f1)) then begin
        psname = "CUSClass";
      end else begin
        psname = "CUListSClass";
      end;
  end;
  OnHotelGuestTouchScreenOClassSpecPasteName = psname;
  return;
end;

global 
procedure OpenSetBarTabClassTouchScreenTClass(Integer mwn,LongInt sernr)
begin
  Integer nwn;
  record RcVc RepSpec;

  if (true) then begin
    nwn = OpenWindow("SetBarTabClassTouchScreenTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.long1 = sernr;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenSetCoversTouchScreenTClass(Integer mwn,LongInt sernr,LongInt persons)
begin
  Integer nwn;
  record RcVc RepSpec;

  if (true) then begin
    nwn = OpenWindow("SetCoversTouchScreenTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = persons;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"long2",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenOpenRecordTouchScreenOClass(Integer mwn,LongInt sernr,LongInt persons)
begin
  Integer nwn;
  record RcVc RepSpec;

  if (true) then begin
    nwn = OpenWindow("OpenRecordTouchScreenOClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = persons;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"long2",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure UpdateVoidQtyTouchScreenOClass(Integer mwn,LongInt sernr,LongInt qty,Integer rwnr,string stdproblemcode)
begin
  Integer nwn;
  record RcVc RepSpec;

  if (true) then begin
    nwn = OpenWindow("UpdateVoidQtyTouchScreenOClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = qty;
      RepSpec.flags[0] = rwnr;
      RepSpec.searchstr = stdproblemcode;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"long2",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenMergeBarTabTouchScreenTClass(Integer mwn,LongInt sernr)
begin
  Integer nwn;
  record RcVc RepSpec;

  if (true) then begin
    nwn = OpenWindow("MergeBarTabTouchScreenTClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = 1;
      RepSpec.long1 = sernr;
      RepSpec.long2 = -1;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"long2",true);
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenMoveItemToBarTabTouchScreenOClass(Integer mwn,LongInt sernr)
begin
  Integer nwn,rownr;
  record RcVc RepSpec;
  record RestAccVc RestAccr;  

  if (true) then begin
    GetWindowRecord(mwn,RestAccr);
    rownr = GetSelectedPOSItemRowIndex(mwn);
    if (rownr>=0) then begin
      nwn = OpenWindow("MoveItemToBarTabTouchScreenOClass",0,mwn,"","",RepSpec);
      if (nwn>0) then begin
        DeselectWindow(nwn,false);
        RepSpec.ArtMode = 1;
        RepSpec.long1 = sernr;
        RepSpec.long2 = -1;
        PutWindowRecord(nwn,RepSpec);
        WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
      end;
    end else begin
      CloseWindow(nwn);
      MessageBox(22057,"");
    end;
  end else begin
    CloseWindow(nwn);
    MessageBox(22057,"");
  end;
  return;
end;

global 
procedure OpenSplitBarTabTouchScreenTClass(Integer mwn,record RestAccVc RestAccr)
begin
  Integer nwn;

  if (true) then begin
    RestAccr.KitchenOrdNr = -1;
    if (WindowState(mwn)!=Rs_insert) then begin
      nwn = OpenWindow("RestAccSplitOClass",0,mwn,"","",RestAccr);
      if (nwn>0) then begin
        DeselectWindow(nwn,false);
      end;
    end;    
  end else begin
    CloseWindow(nwn);
    MessageBox(20807,"");
  end;
  return;
end;

global 
procedure OpenTableLayoutCLass(Integer mwn,string atableview,LongInt bartabnr,Integer settablef)
begin
  record RcVc RepSpec;
  Integer nwn;
  record LocalMachineBlock LMb;
  string 255 tableview;
  
  tableview = atableview;
  if (blank(tableview)) then begin
    BlockLoad(LMb);
    tableview = LMb.TableViewCode;
  end;
  if (nonblank(tableview)) then begin
    RepSpec.ArtMode = settablef;
    RepSpec.long1 = bartabnr;
    RepSpec.AccStr = tableview;
    nwn = OpenWindow("TableLayoutClass",1,mwn,"","",RepSpec);    
  end else begin
    nwn = OpenWindow("SetTableTouchScreenOClass",0,mwn,"","",RepSpec);
    if (nwn>0) then begin
      DeselectWindow(nwn,false);
      RepSpec.ArtMode = settablef;
      RepSpec.long1 = bartabnr;
      PutWindowRecord(nwn,RepSpec);
      WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
    end;
  end;
  return;
end;

global
procedure ApproveIVCashReverseVATHelperTClass()
begin
  Integer wn,old_wn;
  record IVCashVc IVCashr;

  old_wn = CurWindow;
  wn = MotherWindow(old_wn);
  if (GetWindowFileName(wn)=="IVCashVc") then begin
    DeselectWindow(wn,true);
    GetWindowRecord(wn,IVCashr);

    IVCashr.RvrsVATFlag = 1;
    IVCashPasteRvrsVATCode(IVCashr,true);
    IVCashSumup(IVCashr,true);
    PutWindowRecord(wn,IVCashr);
    IVCashDClass_RefreshStringList(wn,IVCashr);
    OpenNPTSPaymentOneModeTClass(wn,IVCashr.SerNr,IVCashr.RetValue,IVCashr.Sum4,IVCashr.CurncyCode);
  end;
  CloseWindow(old_wn);

  return;
end;

global
procedure CancelIVCashReverseVATHelperTClass()
begin
  Integer wn,old_wn;
  record IVCashVc IVCashr;

  old_wn = CurWindow;
  wn = MotherWindow(old_wn);
  if (GetWindowFileName(wn)=="IVCashVc") then begin
    DeselectWindow(wn,true);
    GetWindowRecord(wn,IVCashr);

    IVCashr.RvrsVATFlag = 2;
    IVCashPasteRvrsVATCode(IVCashr,true);
    IVCashSumup(IVCashr,true);
    PutWindowRecord(wn,IVCashr);
    IVCashDClass_RefreshStringList(wn,IVCashr);
    OpenNPTSPaymentOneModeTClass(wn,IVCashr.SerNr,IVCashr.RetValue,IVCashr.Sum4,IVCashr.CurncyCode);
  end;
  CloseWindow(old_wn);

  return;
end;

